<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">
<properties>

<!--    도서 관리 파트-->
    <!--  전체 책 목록 검색-->
    <entry key="도서목록">
        select b_name,author,publisher,add_date from BOOKS

    </entry>
    <!-- 도서 관리 위한 전체 책 목록 조회 -->
    <entry key="readAllBooks">
        SELECT
        B.BOOK_ID,
        B.ISBN,
        B.B_NAME,
        B.AUTHOR,
        B.PUBLISHER,
        B.L_STATUS,
        B.ADD_DATE,
        M.E_NAME
        FROM
        BOOKS B
        LEFT JOIN
        BOOK_LOAN_RECORDS L ON B.BOOK_ID = L.BOOK_ID
        LEFT JOIN
        MEMBERS M ON L.login_id = M.login_id
    </entry>

    <!-- 도서 제목으로 책 정보 조회 -->
    <entry key="ReadBooksByBookName">
        SELECT
        B.BOOK_ID,
        B.ISBN,
        B.B_NAME,
        B.AUTHOR,
        B.PUBLISHER,
        B.L_STATUS,
        B.ADD_DATE,
        M.E_NAME
        FROM
        BOOKS B
        LEFT JOIN
        BOOK_LOAN_RECORDS L ON B.BOOK_ID = L.BOOK_ID
        LEFT JOIN
        MEMBERS M ON L.LOGIN_ID = M.LOGIN_ID
        WHERE B.B_NAME LIKE ?
    </entry>


    <!-- 도서 수정 위한 선택된 책 정보 조회 -->
    <entry key="readBook">
        select B.B_NAME, B.PUBLISHER, B.ISBN,B.AUTHOR,B.TRANSLATOR,B.CATEGORY_ID,C.C_NAME,B.L_STATUS
        FROM BOOKS B JOIN BOOK_CATEGORIES C ON B.CATEGORY_ID = C.CATEGORY_ID
        WHERE B.BOOK_ID = ?
    </entry>


<!--    도서 삭제 -->
    <entry key="deleteSelectedBook">
        {call delete_book (?)}
    </entry>

    <!--  도서 수정-->
    <entry key="updateBook">
        {call edit_book (?,?,?,?,?,?,?,?)}
    </entry>

<!--    도서등록-->
    <entry key="addBook">
        {call add_book (?,?,?,?,?,?)}
    </entry>

<!--    도서대여현황 전체 조회-->
    <entry key="readAllBookLoanRecordsAdmin">
        select b.blr_id,b.login_id,sys.e_name,sys.t_name,sys.d_name,b.b_name,b.loan_date, b.return_pre_date, b.return_date,trunc(sysdate-b.return_pre_date,2)delay_Day
        from book_loan_records b join (select emp_no , e_name , t_name, d_name  from
        (select team_no,t_name,d_name from sysone.teams t join sysone.departments d
        on t.dept_no = d.dept_no) td join sysone.employees e
        on td.team_no = e.team_no) sys
        on b.login_id = sys.emp_no
        order by return_date desc,loan_date asc
    </entry>

    <!--    도서대여현황 이름 검색 조회-->
    <entry key="readBookLoanRecordByNameAdmin">
        select b.blr_id,b.login_id,sys.e_name,sys.t_name,sys.d_name,b.b_name,b.loan_date, b.return_pre_date, b.return_date,trunc(sysdate-b.return_pre_date,2)delay_Day
        from book_loan_records b join (select emp_no , e_name , t_name, d_name  from
        (select team_no,t_name,d_name from sysone.teams t join sysone.departments d
        on t.dept_no = d.dept_no) td join sysone.employees e
        on td.team_no = e.team_no) sys
        on b.login_id = sys.emp_no
        where e_name like ?
        order by return_date desc,loan_date asc
    </entry>

<!--    도서 반납 처리-->
    <entry key="update_return_date">
        {call update_return_date (?)}
    </entry>
    <!--    도서현황 삭제-->
    <entry key="deleteSelectedBookLoanRecord">
        {call delete_book_loan_record (?)}
    </entry>

<!--    도서대여현황 by 팀별-->
    <entry key="readTeamsBookLoanRecords">
        SELECT sys.t_name, COUNT(*) AS count
        FROM book_loan_records b
        JOIN (
        SELECT e.emp_no, e.e_name, td.t_name, td.d_name
        FROM sysone.employees e
        JOIN (
        SELECT t.team_no, t.t_name, d.d_name
        FROM sysone.teams t
        JOIN sysone.departments d ON t.dept_no = d.dept_no
        ) td ON e.team_no = td.team_no
        ) sys ON b.login_id = sys.emp_no
        GROUP BY sys.t_name
    </entry>

    <!--    도서대여현황 by PIVOT 부서별-->
    <entry key="readPivotDepartmentsBookLoanRecords">
        SELECT *
        FROM (
        SELECT sys.d_name, COUNT(*) AS count
        FROM book_loan_records b
        JOIN (
        SELECT e.emp_no, e.e_name, td.t_name, td.d_name
        FROM sysone.employees e
        JOIN (
        SELECT t.team_no, t.t_name, d.d_name
        FROM sysone.teams t
        JOIN sysone.departments d ON t.dept_no = d.dept_no
        ) td ON e.team_no = td.team_no
        ) sys ON b.login_id = sys.emp_no
        GROUP BY sys.d_name
        )
        PIVOT (
        SUM(count) FOR d_name IN (
        '전략사업본부' 전략사업본부,
        '보안사업본부' 보안사업본부,
        'ITO사업본부' ITO사업본부,
        'IDC사업본부' IDC사업본부,
        '솔루션사업본부' 솔루션사업본부,
        '신사업본부' 신사업본부
        )
        )
    </entry>

    <entry key="도서 신청 승인">
        {call insert_book_from_request  (?,?,?)}

    </entry>

<!--    도서 신청-->
    <entry key="updateRequestDate">
    {call update_req_con_date (?)}

    </entry>
<!-- 도서 반려-->
    <entry key="updateReturnDate">
        {call update_return_date (?)}

    </entry>


<!--    사원 관리 파트-->

    <!--    비밀번호 초기화 -->
    <entry key="updatePw">

        {call update_member_password (?)}
    </entry>

    <!--    사원등록 -->
    <entry key="createUser">

        {call insert_member   (?,?)}
    </entry>

    <!-- 사원삭제 -->
    <entry key="deleteUser">

        {call delete_member  (?)}
    </entry>



<!-- 신청도서 파트-->


        <!--신청내역 조회 이미 신청과 반려 된 것들은 제외 -->
<entry key="readApplyStatus">

select b.br_id,b.login_id,m.e_name,b.b_name,b.publisher,b.author
from book_requests b join members m
on b.login_id = m.login_id
and req_con_date is null
and return_date is null
</entry>

<!-- 사용자 조회    -->
 <entry key="findByMember">
     select m.login_id as login_id ,sys.e_name as e_name ,sys.t_name as t_name ,sys.d_name as d_name
     from members m join (select emp_no , e_name , t_name, d_name  from
     (select team_no,t_name,d_name from sysone.teams t join sysone.departments d
     on t.dept_no = d.dept_no) td join sysone.employees e
     on td.team_no = e.team_no) sys
     on m.login_id = sys.emp_no
 </entry>

  <!-- 사용자 검색 -->
<entry key = "searchMember">
    select m.login_id  ,sys.e_name  ,sys.t_name  ,sys.d_name
    from members m join (select emp_no , e_name , t_name, d_name  from
    (select team_no,t_name,d_name from sysone.teams t join sysone.departments d
    on t.dept_no = d.dept_no) td join sysone.employees e
    on td.team_no = e.team_no) sys
    on m.login_id = sys.emp_no
    where m.login_id like ?
    or sys.e_name like ?
    or sys.t_name like ?
    or sys.d_name like ?
</entry>
</properties>

