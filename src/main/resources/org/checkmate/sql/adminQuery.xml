<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">
<properties>
    <!--  로그인 회원 찾기 -->

    <entry key="findByLoginIdAndPassword">
        SELECT LOGIN_ID, PASSWORD, ROLE, DELAY_CNT
        FROM MEMBERS
        WHERE LOGIN_ID = ?
        AND password = ?
    </entry>

<!--    도서 관리 파트-->
    <!--  전체 책 목록 검색-->
    <entry key="도서목록">
        select b_name,author,publisher,add_date from BOOKS

    </entry>

<!--    도서 삭제 -->
    <entry key="도서 삭제">
        {call delete_book (?)}
    </entry>


<!--    도서등록-->
    <entry key="도서 신청 승인">
        {call insert_book_from_request  (?,?,?)}

    </entry>

<!--    도서 신청-->
    <entry key="도서 신청 승인">
    {call update_req_con_date (?)}

    </entry>

    <entry key="도서 신청 반려">
        {call update_return_date (?)}

    </entry>


<!--    사원 관리 파트-->

    <!--    비밀번호 초기화 -->
    <entry key="비밀번호 초기화">

        {call update_member_password  (?,?)}
    </entry>

    <!--    사원등록 -->
    <entry key="userRegister">

        {call insert_member   (?,?)}
    </entry>

    <!-- 사원삭제 -->
    <entry key="userDelete">

        {call delete_member  (?)}
    </entry>



<!-- 신청도서 파트-->


        <!--신청내역 조회 이미 신청과 반려 된 것들은 제외 -->
<entry key="신청 내역 조회">

select b.login_id,m.e_name,b.b_name,b.publisher,b.author
from book_requests b join members m
on b.login_id = m.login_id
and req_con_date is null
and return_date is null
</entry>

<!-- 사용자 조회    -->
 <entry key="findByMember">
     select m.login_id as login_id ,sys.e_name as e_name ,sys.t_name as t_name ,sys.d_name as d_name
     from members m join (select emp_no , e_name , t_name, d_name  from
     (select team_no,t_name,d_name from sysone.teams t join sysone.departments d
     on t.dept_no = d.dept_no) td join sysone.employees e
     on td.team_no = e.team_no) sys
     on m.login_id = sys.emp_no
 </entry>
</properties>